#!/usr/bin/env ruby

CODEBASE_REPOSITORY_URL = "https://%s.codebasehq.com/projects/%s/repositories/%s/tree/master"
CODEBASE_BLOB_URL = "https://%s.codebasehq.com/projects/%s/repositories/%s/blob/master/%s"
CODEBASE_COMMIT_URL = "https://%s.codebasehq.com/projects/%s/repositories/%s/commit/%s"

# Helper methods
#
def open(url)
  if RUBY_PLATFORM =~ /darwin/
    command = 'open'
  elsif RUBY_PLATFORM =~ /linux/
    command = 'xgd-open'
  else
    command = 'start'
  end
  
  `#{command} #{url}`
end

def repository_info
  remote_info = `git remote show origin -n`

  if remote_info =~ /Fetch\sURL:\s(.+)\n/
    remote_url = $1
    
    if remote_url =~ /codebase/
      splited_url = remote_url.split('/')

      if splited_url.size == 3 
        company = splited_url[0].split(':')[1]
        project = splited_url[1]
        repository = splited_url[2].gsub('.git', '')

        return [company, project, repository]
      end
    else
      puts 'error: this is not a codebase repository'
      exit 1
    end
  else
    puts 'error: git remote url not found'
    exit 1
  end
end

def help
  puts "Codebase CLI - Command line utility to open codebase repositories in you browser"
  puts
  puts 'cb'
  puts "\t open the repository homepage"
  puts 'cb <file>'
  puts "\t open the specified file"
  puts 'cb -r | --ref <commit>'
  puts "\t open the specified commit"
end

# CLI
#
case ARGV[0]    
when '--help', '-h'
  help
when '--ref', '-r'
  ref = ARGV[1]
  open CODEBASE_COMMIT_URL % (repository_info << ref)
when nil
  open CODEBASE_REPOSITORY_URL % repository_info
else
  file = ARGV[0]
  open CODEBASE_BLOB_URL % (repository_info << file)
end
