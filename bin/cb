#!/usr/bin/env ruby

CODEBASE_COMPANY_URL    = "https://%s.codebasehq.com"
CODEBASE_PROJECT_URL    = "#{CODEBASE_COMPANY_URL}/projects/%s"
CODEBASE_REPOSITORY_URL = "#{CODEBASE_PROJECT_URL}/repositories/%s"
CODEBASE_BRANCH_URL     = "#{CODEBASE_REPOSITORY_URL}/tree/%s"
CODEBASE_BLOB_URL       = "#{CODEBASE_REPOSITORY_URL}/blob/master/%s"
CODEBASE_COMMIT_URL     = "#{CODEBASE_REPOSITORY_URL}/commit/%s"
CODEBASE_COMPARE_URL    = "#{CODEBASE_REPOSITORY_URL}/compare/%s...%s"

# Helper methods
#
def open(url)
  if RUBY_PLATFORM =~ /darwin/
    command = 'open'
  elsif RUBY_PLATFORM =~ /linux/
    command = 'xdg-open'
  else
    command = 'start'
  end
  
  `#{command} '#{url}'`
end

def repository_info
  remote_info = `git remote show origin -n`

  if remote_info =~ /Fetch\sURL:\s(.+)\n/
    remote_url = $1
    
    if remote_url =~ /codebasehq\.com/
      splited_url = remote_url.split('/')

      if splited_url.size == 3 
        company = splited_url[0].split(':')[1]
        project = splited_url[1]
        repository = splited_url[2].gsub('.git', '')

        return [company, project, repository]
      end
    else
      puts 'error: this is not a codebase repository'
      exit 1
    end
  else
    puts 'error: git remote url not found'
    exit 1
  end
end

def help
  puts "Codebase CLI - Command line utility to open codebase repositories in you browser"
  puts
  puts 'cb'
  puts "\t open the repository homepage"
  puts 'cb <file>'
  puts "\t open the specified file"
  puts 'cb -r | --ref <object>'
  puts "\t open the specified object"
  puts 'cb -b | --branch <branch>'
  puts "\t open the specified branch"
  puts 'cb -c | --compare <ref1> [<ref2>]'
  puts "\t open the diff page between commits. <ref2> is optional, as default value 'master'"
end

# CLI
#
case ARGV[0]    
when '--help', '-h'
  help
when '--ref', '-r'
  ref = ARGV[1]
  open CODEBASE_COMMIT_URL % (repository_info << ref)
when '--branch', '-b'
  branch = ARGV[1]
  open CODEBASE_BRANCH_URL % (repository_info << branch)
when '--compare', '-c'
  params = repository_info << ARGV[1]
  params << (ARGV[2] || 'master')
  open CODEBASE_COMPARE_URL % params
when nil
  open CODEBASE_BRANCH_URL % (repository_info << 'master')
else
  file = ARGV[0]
  open CODEBASE_BLOB_URL % (repository_info << file)
end
